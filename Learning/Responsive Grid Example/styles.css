/*grid area can be used as another method for placement in lines and columns*/

body{
    color: white;
    text-align: center;
    font-family: 'Nunito Semibold';
}

#content{              /*default display for mobiles*/
    display: grid;
    grid-template-columns: repeat(4, 1fr);    /*grid with 4 columns and equal width*/
    grid-auto-rows: minmax(100px, auto);
    grid-gap: 10px;
    max-width: 960px;
    margin: 0 auto;           /*centralises the 960px element on the page*/
    position: relative;   /*so u can position grid on it*/
    grid-template-areas:     /*each horizontal line=row, vertical=column ie area each element occupies*/
    "header header header header"
    "footer footer footer footer"
    "main main main main"
    "main main main main"
    "aside aside nav nav"
    "section section section section"
    "section section section section";
   }

@media screen and (min-width: 760px) {       /*ie for screens with width=or>760px*/
    
#content{
    display: grid;
    grid-template-columns: repeat(4, 1fr);    /*grid with 4 columns and equal width*/
    grid-auto-rows: minmax(100px, auto);
    grid-gap: 10px;
    max-width: 960px;
    margin: 0 auto;           /*centralises the 960px element on the page*/
    grid-template-areas:     /*each horizontal line=row, vertical=column ie area each element occupies*/
    "header header header header"
    "aside aside main main"
    "nav nav main main"
    "section section section section"
    "section section section section"
    "footer footer footer footer";
   }

}

#content > *{         /*style all descendants of div with id=content as bellow*/                
    background: seagreen;
    padding: 30px;
}

header{
    grid-area: header;       /*header is the name for the grid-area*/
}

main{
    grid-area: main;
}

section{
    grid-area: section;
}

aside{
    grid-area: aside;
}

nav{
    grid-area: nav;
}

footer{
    grid-area: footer;
}

/*all grid styles*/
#grid{
    display: grid;
    position: absolute;
    top: 0;
    left: 0;
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: minmax(100%, auto);      /*ie takes 100% height of parent*/
    width: 100%;
    height: 100%;
    background: transparent;
    padding: 0;
    display: none;   /*because you want to see grid only when box is checked*/
}

#grid p{
    background: black;
    margin: 0;
    opacity: 0.2;
    border: 1px solid;
}

input:checked + #content #grid{    /*ie when box is checked, grab content and grid within and display all as grid instead of default none*/
    display: grid;
}

span, .view{
    color: black;
    font-weight: bold;
    padding: 10px;
}
