/*keyframes: where we define animations and tell css how we want animations to work
we can then apply them to as many elements afterwards.*/
html, body{          /*very important ie all the display is used by the body. note syntax*/
    width: 100%;
    height: 100%;
    margin: 0;
    overflow: hidden;      /*prevents any extra whitespace or unwanted horizontal scrolling*/
}

.sky, .grass, .road{
    position: relative;  /*default is static. with relative u can move object but its space still remains. u can also place an element on it bcos its not fixed.*/
}
.sky{
    height: 40%;
    background: skyblue;
}

.grass{
    height: 30%;
    background: green;
}

h1{
    position:absolute;
    color: white;
    text-align: center;
    top: 40%;
    left: 310px;
   
}

.road{
    height: 30%;
    background: dimgray;
    box-sizing: border-box;
    border-top: 10px solid grey;
    border-bottom: 10px solid grey;
}

.lines{
    box-sizing: border-box;
    border: 5px dashed white;
    height: 0px;
    bottom: 15%;            /*distance from bottom of page*/
    width: 100%;
    position: absolute;     /*with absolute, if element is moved, another element occupies its space*/
}

/* animation-fill-mode parameters---forwards:remain at the end(ie where the car stopped)
    backwords:start at starting pt of from(translateX)
    both: applies forwards and backwards*/
.car{
    position: absolute;
    bottom: 20%;
    left: 0px;
    animation-name: drive;          /*applying animation defined in keyframe and time it takes*/
    animation-duration:4s;
    animation-fill-mode: both;   /*ie what to do after executing animation.*/ 
    /*animation-delay: 1s;   /*after page is loaded, wait for this time before begining animation*/
    animation-iteration-count: infinite;     /*how many times animation should repeat*/
    animation-timing-function: linear;   /*same speed throughout. Default value is ease OR use cubic-bezier funcs to form your own timimg*/
}

.car2{
    position: absolute;
    left: 0px;
    bottom: 18px;
    animation: drive 6s linear 0s infinite reverse both,
               jump 2s 2s ease 3;    /*chaining 2 diff animations*/
}

.cloud{
    position: absolute;      /*clouds are on each other*/
    /*animation: name duration timing-function delay iteration-count direction fill-mode; */
    animation: movecloud 50s linear 0s infinite forwards;
}

.cloud:nth-child(1){  /*what happens to cloud child 1*/
    top: 120px;
    width: 220px;
    opacity: 0.6;
    left: 200px;
}

.cloud:nth-child(2){  
    top: 115px;
    width: 270px;
    opacity: 0.8;
    left: 450px;
}

.cloud:nth-child(3){  
    top: 0px;
    width: 350px;
    left: 250px;
}

/*applying keyframe to the animation. syntax: @keyframes animationName*/

@keyframes drive{
    from{transform: translateX(-5px)}   /*transform(change in state), translate(movement from position -5 on x-axix ie off-screen)*/
    to{transform: translateX(1800px)}  /*distance to move in pixels*/
}

@keyframes movecloud{
    from{left: opx}
    to{left: 100%}
}

@keyframes jump{  /*here we can use % ie 0%(start of animation), 100%(end)*/
    0%{bottom: 20%}
    50%{bottom: 30%}
    100%{bottom: 20%}
}